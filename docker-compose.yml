version: '3.3'

services:
  nginx:
      image: nginx:stable
      container_name: transport_nginx 
      ports:
        - "8080:8080"
        - "80:80"
        - "443:443"
      volumes:
        - ./nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/logs:/var/log/nginx
        - ./nginx/cert:/etc/nginx/cert
        - ./static:/static
        - ./media:/media
      depends_on:
        - backend
      command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
      restart: always
      env_file:
        - .env
  db:
      image: postgres:12-alpine
      volumes:
        - project_db:/var/lib/postgresql/data
      restart: always
      ports:
        - 5432:5432
      env_file:
        - .env
  backend:
      build: .
      container_name: transport_django
      command: >
        sh -c "
               python3 manage.py collectstatic --noinput &&
               python3 manage.py migrate --noinput &&
               gunicorn -b 0.0.0.0:8000 core.wsgi --workers 12 --reload --timeout 0"
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
        - ./media:/media
      ports:
        - 8000:8000
      restart: always
      depends_on:
        - db
  celery:
      build: .
      command: celery -A core worker -l INFO --statedb=worker.state --pool=gevent --concurrency=500
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
        - ./media:/media
      restart: always
  celery_beat:
      build: .
      command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
      env_file:
        - .env
      volumes:
        - ./app:/app
        - ./logs:/logs
        - ./static:/static
        - ./media:/media
      restart: always
  redis:
    image: redis:alpine
    command: redis-server --requirepass wlrShwwwcdvELAueC1J9
    ports:
      - "6379:6379"
    env_file:
      - .env
  rabbitmq:
    image: rabbitmq:3.9.11-alpine
    container_name: pdf-rabbitmq
    env_file:
      - .env
  libre1:
    build: ./libreoffice
    volumes:
      - ./media:/media
  libre2:
    build: ./libreoffice
    volumes:
      - ./media:/media
  libre3:
    build: ./libreoffice
    volumes:
      - ./media:/media
  libre4:
    build: ./libreoffice
    volumes:
      - ./media:/media
  libre5:
    build: ./libreoffice
    volumes:
      - ./media:/media
  balancer:
    image: nginx:stable
    ports:
      - "6000:80"
    volumes:
      - ./nginx/conf/balancer.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx
      - ./static:/static
      - ./media:/media


volumes:
    project_db:
